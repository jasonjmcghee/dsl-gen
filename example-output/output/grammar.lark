start: statement+

statement: assignment ";"            -> assign_stmt
         | expr ";"                  -> expr_stmt

assignment: NAME "=" expr            -> assign

expr: sum

sum: product (ADD_OP product | SUB_OP product)*

product: power (MUL_OP power | DIV_OP power)*

ADD_OP: "+"
SUB_OP: "-"
MUL_OP: "*"
DIV_OP: "/"

power: unary ("^" power)?            -> pow

unary: ("+" | "-")* atom             -> signed

atom: NUMBER                         -> number
    | NAME                           -> var
    | "(" expr ")"                   -> paren

NUMBER: /[0-9]+(\.[0-9]+)?([eE][+-]?[0-9]+)?/
NAME: /[a-zA-Z_][a-zA-Z0-9_]*/

%import common.WS
%ignore WS